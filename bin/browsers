#!/usr/bin/env node

var path = require('path');
var fs = require('fs');

var commander = require('commander');
var spawn = require('win-spawn');
require('colorful').colorful();
var _ = require('underscore');

var program = require('../lib/utils/program');
var browsers = require('../lib/browsers');

var pkgStr = fs.readFileSync(path.join(module.filename, '../../package.json'));
var pkg = JSON.parse(pkgStr)

commander
  .version(pkg.version)
  .usage('[options]');

commander
  .option('-c, --capture [capture url]', '默认浏览器打开的地址: [capture]')
  .option('-p, --port [local port]', '本地服务默认端口号(8080): [port]')
  .option('--browsers [browsers name]', '指定启动的浏览器, 默认 Chrome: [browsers]')
  .option('--hub [s]', '指定主服务.: [http://10.15.52.87:8080/register]')
  .option('--manager [b]', '是否启动管理服务');


commander.on('--help', function() {
  console.log();
  console.log('  ' + 'Examples:'.to.bold.blue.color);
  console.log();
  console.log('   启动Chrome');
  console.log();
  console.log('   $ ' + 'browsers run --browsers=Chrome'.to.magenta.color);
  console.log();
  console.log('   For more information: ' + 'https://github.com/totorojs/browsers-launcher'.to.underline.color);
  console.log();
});

commander.parse(process.argv);


// 解析配置
var configPath = path.join(process.cwd(), 'browsersConfig.json');
var config = {};
if (fs.existsSync(configPath)) {
  config = JSON.parse(fs.readFileSync(configPath) + '');
}

_.defaults(commander, config);

var options = {
    server: commander.server || '10.15.52.87:9999',
    port: commander.port || '8080',
    browsers: commander.browsers,
    timeout: 50000,
    capture: commander.capture,
    hub: commander.hub || '10.15.52.87:8080',
    manager: commander.manager,
    managers: commander.managers || [],
    maxMemory: commander.maxMemory || 500
}

if (options.server && options.server.indexOf('http') < 0) {
    options.server = 'http://' + options.server
}

if (options.hub && options.hub.indexOf('http') < 0) {
    options.hub = 'http://' + options.hub
}

browsers.run(options)
